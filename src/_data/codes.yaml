---
#1XX:
#  100:
#    title: Continue
#  101:
#    title: Switching Protocols
#  102:
#    title: Processing
#    tag: Webdav
#  103:
#    title: Early Hints

2XX:
#  200:
#    title: OK
  201:
    title: Created
    description: |
      201 Created indicates that the request has been fulfilled and has resulted in one or more new resources being created.  The primary resource created by the request is identified by either a Location header field in the response or, if no Location field is received, by the effective request URI.

      The 201 response payload typically describes and links to the resource(s) created.  See [Section 7.2](https://tools.ietf.org/html/rfc7231#section-7.2) of the RFC for a discussion of the meaning and purpose of validator header fields, such as ETag and Last-Modified, in a 201 response.
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.3.2
#  202:
#    title: Accepted
#  203:
#    title: Non-Authoritative Information
  204:
    title: No Content
    description: |
      204 No Content indicates that the server has successfully fulfilled the request and that there is no additional content to send in the response payload body.  Metadata in the response header fields refer to the target resource and its selected representation after the requested action was applied.

      For example, if a 204 status code is received in response to a PUT request and the response contains an ETag header field, then the PUT was successful and the ETag field-value contains the entity-tag for the new representation of that target resource.

      A 204 response is terminated by the first empty line after the header fields because it cannot contain a message body and is cacheable by default.
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.3.5
#  205:
#    title: Reset Content
#  206:
#    title: Partial Content
#  207:
#    title: Multi-Status
#    tag: Webdav
#  208:
#    title: Already Reported
#    tag: Webdav
#  226:
#    title: IM Used

3XX:
  300:
    title: Multiple Choices
  301:
    title: Moved Permanently
    description: |
      301 Moved Permanently indicates that the target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs. Links that result in a 301 should be edited to link directly to the final URI where possible.

      The server SHOULD generate a `Location` header field in the response containing a preferred URI reference for the new permanent URI.  The user agent MAY use the Location field value for automatic redirection.  The server's response payload usually contains a short hypertext note with a hyperlink to the new URI(s) however this is optional.

      This response is cachable.
    diagram: |
      sequenceDiagram
      participant User
      participant Website

      User ->> Website: Requests /home/
      Website -->> User: Redirects 301 /
      User ->> Website: Requests /
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.4.2
#  302:
#    title: Found
#  303:
#    title: See Other
#  304:
#    title: Not Modified
#  305:
#    title: Use Proxy
#  306:
#    title: Switch Proxy
#  307:
#    title: Temporary Redirect
#  308:
#    title: Permanent Redirect

#4XX:
#  400:
#    title: Bad Request
#  401:
#    title: Denied
#  402:
#    title: Payment Required
#  403:
#    title: Forbidden
#  404:
#    title: Not Found
#  405:
#    title: Method Not Allowed
#  406:
#    title: Not Acceptable
#  407:
#    title: Proxy Authentication Required
#  408:
#    title: Request Timeout
#  409:
#    title: Conflict
#  410:
#    title: Gone
#  411:
#    title: Length Required
#  412:
#    title: Precondition Failed
#  413:
#    title: Payload Too Large
#  414:
#    title: URI Too Long
#  415:
#    title: Unsupported Media Type
#  416:
#    title: Range Not Satisfiable
#  417:
#    title: Expectation Failed
#  418:
#    title: I'm a teapot
#  421:
#    title: Misdirected Request
#  422:
#    title: Unprocessable Entity
#    tag: Webdav
#  423:
#    title: Locked
#    tag: Webdav
#  424:
#    title: Failed Dependency
#    tag: Webdav
#  425:
#    title: Too Early
#  426:
#    title: Upgrade Required
#  428:
#    title: Precondition Required
#  429:
#    title: Too Many Requests
#  431:
#    title: Request Header Fields Too Large
#  451:
#    title: Unavailable For Legal Reasons

5XX:
  500:
    title: Internal Server Error
    description: The 500 (Internal Server Error) status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.6.1

  501:
    title: Not Implemented
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.6.2
    description: The origin web server either does not recognize the request method, or it unable to fulfill the request. Usually, this implies future availability (e.g., an upcoming feature or web-service API).

  502:
    title: Bad gateway
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.6.3
    description: |
      The 502 (Bad Gateway) status code indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.

  503:
    title: Service Unavailable
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.6.4
    description: Indicates that the server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.  The server MAY send a Retry-After header field to suggest an appropriate amount of time for the client to wait before retrying the request.

  504:
    title: Gateway Timeout
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.6.5
    description: Indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.

  505:
    title: HTTP Version Not Supported
    description: |
      The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in [Section 2.6 of RFC7230](https://tools.ietf.org/html/rfc7230#section-2.6), other than with this error message.

      The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.
    diagram: |
      sequenceDiagram
      participant User
      participant Website

      User ->> Website: Requests website
      Website -->> User: Returns 505 error
    rfc:
      number: RFC 7231
      link: https://tools.ietf.org/html/rfc7231#section-6.6.6

#  506:
#    title: Variant Also Negotiates
#  507:
#    title: Insufficient Storage
#    tag: Webdav
#  508:
#    title: Loop Detected
#    tag: Webdav
#  510:
#    title: Not Extended
#  511:
#    title: Network Authentication Required

  # Non-standard Ones
  520:
    title: Unknown error
    tag: Cloudflare
    description: |
      This is a catch-all response for when a website behind Cloudflare returns something unexpected or something that is not tolerated/interpreted (protocol violation or empty response).

      While the 520 error can be triggered by very unique and strange edge-case scenarios, they are generally caused by:

      * Connection resets (following a successful TCP handshake)
      * Headers exceed the Cloudflare header size limit (over 8kb)
      * An empty response from origin
      * An invalid HTTP response
      * Missing response headers from an HTTP response
      * Presence of multiple Content-Length headers
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
  521:
    title: Web server is down
    tag: Cloudflare
    description: |
      The webserver behind Cloudflare (or another service that uses this resposne code) is refusing connections. This means Cloudflare tried to connect to your origin web server on port 80 or 443 but received a _connection refused_ error. The origin web server is actively refusing the request, so this is not a network error.
    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Website
      Note right of Website: Behind Cloudflare

      User ->> Cloudflare: Initial request
      Cloudflare ->>+ Website: Initiates TCP connection
      Website -->> Cloudflare: Refuses the connection
      Cloudflare -->> User: Returns 521 error
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
  522:
    title: Connection timed out
    tag: Cloudflare
    description: |
      Cloudflare failed to establish a TCP connection to the website hosted behind it. If Cloudflare does not get a _SYN+ACK_ back within 15 seconds as part of the TCP handshake this error is returned.
    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Website
      Note right of Website: Behind Cloudflare

      User ->> Cloudflare: Initial request
      Cloudflare ->>+ Website: Initiates TCP connection
      Cloudflare -->>+ Website: TCP connection fails
      Cloudflare -->> User: Returns 522 error
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
  523:
    title: Origin is Unreachable
    tag: Cloudflare
    description: |
      Error 523 indicates that an issue with the origin web server has occurred and the site is unreachable.
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
  524:
    title: A Timeout Error
    tag: Cloudflare
    description: |
      Cloudflare was able to make a TCP connection to the website behind them, but it did not reply with an HTTP response before the connection timed out. Cloudflare will typically wait 100 seconds for a HTTP response from your server.

      If no response is sent by your server in that time, Cloudflare closes the connection and serves a 524 error page.
    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Website
      Note right of Website: Behind Cloudflare

      User ->> Cloudflare: Initial request
      Cloudflare ->>+ Website: Initiates TCP connection
      Cloudflare ->>+ Website: TCP connection succeeds
      Website -->> Cloudflare: Takes too long to respond
      Cloudflare -->> User: Returns 524 error
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
  525:
    title: SSL handshake failed
    description: |
      This error indicates that the SSL handshake between Cloudflare and the website behind it has occurred. This means that Cloudflare is set to use Full SSL in the Cloudflare settings for the domain, so Cloudflare attempts to make a connection using SSL (for requests beginning in `https://`) to the web server that hosts the domain.

      The most common causes include:

        * The website does not have a valid SSL certificate installed
        * The website is not listening on port `443`
        * The website does not support or is not configured properly to support SNI
        * The cipher suites that Cloudflare uses do not match what the origin accepts
    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Website
      Note right of Website: Behind Cloudflare

      User->>Cloudflare: Initial request
      Cloudflare->>+Website: Initiates SSL handshake
      Website -->>+ Cloudflare: SSL handshake fails
      Cloudflare -->> User: Returns 525 error
    tag: Cloudflare
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
      - https://support.cloudflare.com/hc/en-us/articles/200278659/
  526:
    title: Invalid SSL certificate
    description: |
      This error happens where there's a problem validating the SSL certificate on the origin web server and the Cloudflare SSL configuration on the website is set to "Full SSL (Strict)".

      Some of the common causes of this are:
        * The certificate has expired
        * The certificate has been revoked
        * The certificate is self-signed
        * Your website configuration is serving a certificate for the wrong domain
    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Website
      Note right of Website: Behind Cloudflare

      User->>Cloudflare: Initial request
      Cloudflare -->> Website: Server fails SSL validation
      Cloudflare -->> User: Returns 526 error
    tag: Cloudflare
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
      - https://support.cloudflare.com/hc/en-us/articles/200721975/
  527:
    title: Railgun Listener to Origin Error
    description: |
      The request timed out or failed after the WAN connection had been established. This could result from an interruption or anomaly upstream from the Railgun Sender in the path to the Listener at the site origin web server.

      527 error could also occur due to an issue within the host environment when the Railgun Listener is unable to complete or establish a connection to the origin web server to receive a requested page.
    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Cloudflare Railgun
      participant Website
      Note right of Website: Behind Cloudflare

      User->>Cloudflare: Initial request
      Cloudflare ->> Cloudflare Railgun: Fowards request
      Cloudflare Railgun ->> Website: Request timed out / failed
      Cloudflare Railgun -->> Cloudflare: Request fails
      Cloudflare -->> User: Returns 526 error
    tag: Cloudflare
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
      - https://support.cloudflare.com/hc/en-us/articles/217891268
  530:
    title: Origin DNS Error
    description: |
      Cloudflare cannot resolve the A/AAAA or CNAME DNS record requested. Even if Cloudflare is resolving correctly, the record cannot be found or is a CNAME record to an external domain that cannot be resolved.

      The Error Message the browser will see will show a 1016 error, but the actual HTTP response code is 530.

      The most common causes are:

        * Your Cloudflare DNS configuration does not have an A/AAAA DNS record that matches the origin IP address.
        * You have a *CNAME DNS record* pointing to an external domain that cannot be resolved.
        * You're using Cloudflare [Load Balancer](https://www.cloudflare.com/load-balancing/) and the origin host names (CNAMEs) in your default/region and fallback pools cannot be resolved via DNS.

    diagram: |
      sequenceDiagram
      participant User
      participant Cloudflare
      participant Website
      Note right of Website: Behind Cloudflare

      User ->> Cloudflare: Initial request
      Cloudflare -->> Website: Can't resolve the website
      Cloudflare -->> User: Returns 530 error
    tag: Cloudflare
    refs:
      - https://support.cloudflare.com/hc/en-us/articles/115003011431/
      - https://support.cloudflare.com/hc/en-us/articles/234979888/
